/**
 * @license
 * Copyright (C) 2024 Beijing Yishu Technology Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import window from '@ohos.window'

import AutotrackClick from './AutotrackClick'
import AutotrackPage from './AutotrackPage'
import GrowingContext from '../core/Context'
import { LogUtil } from '../utils/LogUtil'

export default class Autotrack {
  static uiContent: UIContext
  static autotrackEnabled: boolean

  static startObserver(windowStage: window.WindowStage) {
    try {
      let window = windowStage.getMainWindowSync()
      let context = window.getUIContext()
      Autotrack.uiContent = context
      AutotrackClick.startObserver(context)
      AutotrackPage.startObserver(context)
    } catch (e) {
      LogUtil.error(() => `Failed to obtain the main window. Cause code:${e.code}, message: ${e.message}`)
    }
  }

  static initAutotrack(context: GrowingContext) {
    if (!context.config.autotrackEnabled) {
      return
    }
    if (!Autotrack.uiContent) {
      LogUtil.error(() => 'Must call Autotrack.startObserver(windowStage) when windowStageCreate')
      return
    }
    AutotrackPage.startSubscribeToEvent()
  }
}

